#!/bin/bash

# Function to display ASCII art logo
display_logo() {
    if [ -f /etc/os-release ]; then
        source /etc/os-release
        case $ID in
            "mint")
                echo -e "\e[32m" # green color
                cat << "EOF"
 ___________     
|_          \   
  | | _____ |    
  | | | | | |   
  | | | | | |   
  | \_____/ |    
  \_________/
EOF
                ;;
            "ubuntu")
                echo -e "\e[31m" # Red color
                cat << "EOF"
         _    
     ---(_)   
 _/  ---  \   
(_) |   |     
  \  --- _/    
     ---(_)  

EOF
                ;;
            "arch")
                echo -e "\e[34m" # blue color
                cat << "EOF"
          /\
         /  \
        /    \
       /      \
      /   ,,   \
     /   |  |   \
    /_-''    ''-_\
EOF
                ;;
            "debian")
                echo -e "\e[31m" #red
                cat << "EOF"
  _____     
 /  __ \    
|  /    |    
|  \___-     
-_          
  --_       
       


EOF
                ;;
          "fedora")
                echo -e "\e[34m" # blue
                cat << "EOF"
      _____      
     /   __)\    
     |  /  \ \   
  ___|  |__/ /   
 / (_    _)_/    
/ /  |  |        
\ \__/  |        
 \(_____/ 

EOF
                ;;
                    "opensuse")
                echo -e "\e[32m" # green
                cat << "EOF"
  _______     
__|   __ \     
     / .\ \   
     \__/ |   
   _______|   
   \_______   
__________/ 


EOF
                ;;
                     "zorin")
                echo -e "\e[34m" #blue
                cat << "EOF"
      `osssssssssssssssssssso`           
       .osssssssssssssssssssssso.          
      .+oooooooooooooooooooooooo+.         
                                           
                                           
  `::::::::::::::::::::::.         .:`     
 `+ssssssssssssssssss+:.`     `.:+ssso`    
.ossssssssssssssso/.       `-+ossssssso.   
ssssssssssssso/-`      `-/osssssssssssss    
.ossssssso/-`      .-/ossssssssssssssso.   
 `+sss+:.      `.:+ssssssssssssssssss+`    
  `:.         .::::::::::::::::::::::`     
                                           
                                           
      .+oooooooooooooooooooooooo+.         
       -osssssssssssssssssssssso-          
        `osssssssssssssssssssso`           
                                  



EOF
                ;;

                     "elementary OS")
                echo -e "\e[37m" #white
                cat << "EOF"
         eeeeeeeeeeeeeeeee            
    eeeee  eeeeeeeeeeee   eeeee       
  eeee   eeeee       eee     eeee     
 eeee   eeee          eee     eeee    
eee    eee            eee       eee   
eee   eee            eee        eee   
ee    eee           eeee       eeee   
ee    eee         eeeee      eeeeee   
ee    eee       eeeee      eeeee ee   
eee   eeee   eeeeee      eeeee  eee   
eee    eeeeeeeeee     eeeeee    eee   
 eeeeeeeeeeeeeeeeeeeeeeee    eeeee    
  eeeeeeee eeeeeeeeeeee      eeee     
    eeeee                 eeeee       
      eeeeeee         eeeeeee         
         eeeeeeeeeeeeeeeee            



EOF
                ;;
                 "Manjaro")
                echo -e "\e[32m" #green
                cat << "EOF"
||||||||| ||||   
||||||||| ||||   
||||      ||||   
|||| |||| ||||   
|||| |||| ||||   
|||| |||| ||||   
|||| |||| |||| 


EOF
                ;;


        esac
    else
        # Default logo
        echo -e "\e[35m" # Magenta color
        cat << "EOF"
          .88888888:.
        88888888.88888.
       .8888888888888888.
       888888888888888888
       88' _`88'_  `88888
       88 88 88 88  88888
       88_88_::_88_:88888
       88:::,::,:::::8888
       88`:::::::::'`8888
      .88  `::::'    8:88.
     .88            .::888.
    .8888. .  ...  .:88888:.
    .8888::.     .::88888::
    .8888'`::. .::'`8888
    .       `::'    `888
               .::::888
              .:::::::8
             .:::::::::
            :::::::::::
     ...       :::::::::::

EOF
    fi
    echo -e "\e[0m" # Reset color
}

# Function to display system information
display_info() {
    echo -e "\e[33m Operating System:\e[0m $(uname -o)"  #OS
    echo -e "\e[33m Kernel Name:\e[0m $(uname -s)"  #Kernel
    echo -e "\e[33m Kernel Version:\e[0m $(uname -r)"  #Kernel
    echo -e "\e[33m Kernel Release:\e[0m $(uname -v)"  #Kernel
    echo -e "\e[33m Kernel Architecture:\e[0m $(uname -m)"  #Kernel
    echo -e "\e[33m\e[33m Machine Hardware Platform:\e[0m $(uname -i)"  # Machine Hardware Platform
    echo -e "\e[33m Processor Type:\e[0m $(uname -p)"  # Processor Type
    echo -e "\e[33m CPU:\e[0m $(grep "model name" /proc/cpuinfo | cut -d ' ' -f 3- | uniq)"  #CPU
    echo -e "\e[33m GPU:\e[0m $(lspci | grep VGA | cut -d ':' -f 3 | cut -d '[' -f 1 | sed 's/^ *//')" #GPU
    echo -e "\e[33m Memory:\e[0m $(free -h | awk '/^Mem/ {print $2 " total, " $3 " used"}')"  #Memory
    echo -e "\e[33m Disk Usage:\e[0m $(df -h / | awk 'NR==2 {print $3 " used, " $4 " free"}')"  #Disk Usage
    echo -e "\e[33m Second Hard Drive Usage:\e[0m $(df -h /dev/sda1 | awk 'NR==2 {print $3 " used, " $4 " free"}')"  #Disk Usage2
    echo -e "\e[33m Flash Disk:\e[0m $(df -h /dev/sda | awk 'NR==2 {print $3 " used, " $4 " free"}')"  #Disk Usage3
    echo -e "\e[33mClock/Time:\e[0m $(date +"%H:%M")" #time
    echo -e "\e[33m Mounted Drive/Drives:\e[0m" #mount drive
    mount | grep '^/dev/' | awk '{print $1 " mounted on " $3}'
    
    
}

# Main function to display output
main() {
    display_logo
    display_info
}

# Execute main function
main
